name: Test All Playwright Libraries - Direct Browser Fix

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test-all-playwright:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install all Playwright libraries
      run: |
        pip install playwright patchright camoufox rebrowser-playwright
        
    - name: Install browsers and create rebrowser symlinks
      run: |
        # Install browsers for standard playwright
        playwright install chromium --with-deps
        
        # Check what was installed
        echo "Browser cache contents after playwright install:"
        ls -la ~/.cache/ms-playwright/
        
        # Create symlinks for rebrowser-playwright
        # The error shows rebrowser looks for chromium_headless_shell-* but playwright installs chromium-*
        cd ~/.cache/ms-playwright/
        
        # Find chromium directories and create corresponding headless_shell directories
        for chromium_dir in chromium-*; do
          if [ -d "$chromium_dir" ]; then
            # Extract version number
            version=$(echo "$chromium_dir" | sed 's/chromium-//')
            headless_dir="chromium_headless_shell-$version"
            
            echo "Creating symlink: $chromium_dir -> $headless_dir"
            if [ ! -e "$headless_dir" ]; then
              ln -s "$chromium_dir" "$headless_dir"
            fi
          fi
        done
        
        echo "Browser cache contents after creating symlinks:"
        ls -la ~/.cache/ms-playwright/

    - name: Create browser test script
      run: |
        cat > test_browsers.py << 'EOF'
        import asyncio

        async def test_browsers():
            tests = [
                ('playwright', 'from playwright.async_api import async_playwright'),
                ('rebrowser_playwright', 'from rebrowser_playwright.async_api import async_playwright'),
                ('patchright', 'from patchright.async_api import async_playwright')
            ]
            
            for name, import_cmd in tests:
                try:
                    print(f'Testing {name}...')
                    local_vars = {}
                    exec(import_cmd, globals(), local_vars)
                    async_playwright = local_vars.get('async_playwright') or globals().get('async_playwright')
                    
                    async with async_playwright() as p:
                        browser = await p.chromium.launch(headless=True)
                        page = await browser.new_page()
                        await page.goto('about:blank')
                        print(f'✅ {name}: SUCCESS')
                        await browser.close()
                except Exception as e:
                    print(f'❌ {name}: FAILED - {str(e)}')

        if __name__ == '__main__':
            asyncio.run(test_browsers())
        EOF

    - name: Test browser launches
      run: python test_browsers.py

    - name: Set up display
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run tests
      env:
        HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
        HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
        PROXY_USERNAME: ${{ secrets.PROXY_USERNAME }}
        PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
      run: |
        python main.py --libraries playwright,patchright,camoufox,rebrowser_playwright
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-test-results
        path: |
          test_results/
          !test_results/screenshots
        retention-days: 30
        
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-screenshots
        path: test_results/screenshots/
        retention-days: 7
